read:
  # !!! Project folder to be scanned - provide actual value !!!
  folder: "/work/project/scanned-sample"

copy:
  privateSource:
    dir: ${read.folder}
    mode: FILES
    #Usually 'prefix' is main branch name, but always in uppercase, e.g. DEVELOP for develop branch, MAIN for main branch
    branchPrefix: DEV_INT
    egress:
      date: 2022-10-21
      main: DEV_INT
      tag: btech/${copy.privateSource.branchPrefix}_EGRESS_START_${copy.privateSource.egress.date}
      branch: btech/${copy.privateSource.branchPrefix}_EGRESS_${copy.privateSource.egress.date}
      staging:
         name: btech/${copy.privateSource.branchPrefix}_EGRESS
         tag: EGRESS-LATEST
    ingress:
      date: 2022-10-23
      branch: btech/${copy.privateSource.branchPrefix}_INGRESS_${copy.privateSource.ingress.date}

  publicSource:
    # !!! Folder for public changes - provide actual value !!!
    dir: "/work/project/public-sample"
    mode: FILES
    egress:
      date: 2022-10-21
      branch: btech/EGRESS_${copy.public.egress.date}
    ingress:
      date: 2022-10-22
      tag: btech/INGRESS_${copy.public.ingress.date}

  file:
    guard:
      # file folder (ending with '/') and file name patterns to include in copy/cleanup
      # wildcards: https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/util/AntPathMatcher.html
      values:
        - "**/*/"
        - "**/*"
      valueFiles: [ ]
    ignore:
      # file folder and file name patterns to exclude from copy/cleanup
      values: [ "**/.git/", "**/.github/", "**/.devcontainer/" ]

replace:
  file:
    guard:
      # file folder (ending with '/') and file name patterns to include in scan
      # wildcards: https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/util/AntPathMatcher.html
      values:
        - "**/*/"
        - "**/*"
      valueFiles: [ ]
    ignore:
      # file folder and file name patterns to exclude from scan
      values: [ ]
      valueFiles:
        - "${scan.config}/file-ignore.csv"

  word:
    guard:
      values: { }
      ## Mappings of "from" and "to" word replacements. "To" can be empty, will be generated. Examples:
      # "acme": "testCompany"
      # "akka": ""
      patterns:
        ## Mappings of "from" and "to" pattern replacements. "To" can contain template variables, can be empty.
        "[\\w[\\w.-]+@\\w+(\\.\\w+)+]": "u{hash}@mail.local"
        "[\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}]": "h{hash}.domain.local"
        "[\\w[\\w.-]+\\.intra]": "h{hash}.domain.local"
      valueFiles:
        # Long list of words can be extracted to separate files in config folder
        - "${scan.config}/word-guard-value.csv"
      patternFiles:
        # Long list of patterns can be extracted to separate files in config folder
        - "${scan.config}/word-guard-pattern.csv"

    ignore:
      values:
        - "localhost"
        - "127.0.0.1"
        - "0.0.0.0"
      patterns: # ignore pattern is searched, use ^..$ to match complete word
        - "@mail.local$"
      valueFiles: [ ]
      patternFiles: [ ]


  # Manual markup for false-positives, context-dependent replacements.
  instruction:
    files:
      - ${scan.config}/replace-instruction.csv # common instructions, utilizing narrowed context, file path patterns
      - ${scan.config}/replace-instruction-lines.csv # collect one-time instructions in config folder, copy-pasted from report

restore:
  file:
    guard:
      values:
        - "**/*/"
        - "**/*"
      valueFiles: [ ]
    ignore:
      values: [ ]
      valueFiles:
        - "${scan.config}/file-ignore.csv"

  word:
    guard:
      values: [ ]
      patterns:
        ## Mappings of "from" and "to" pattern replacements. "To" can be empty, to be taken from instruction.
        "[w\\d{3,}]": ""
        "[h\\d{3,}.domain.local]": ""
        "[u\\d{3,}@mail.local]": ""
      valueFiles: [ ]
      patternFiles: [ ]

    ignore:
      values: [ ]
      patterns: [ ] # ignore pattern is searched, use ^..$ to match complete word
      valueFiles: [ ]
      patternFiles: [ ]

  # Manual markup for false-positives, context-dependent replacements.
  instruction:
    files:
      - ${scan.config}/restore-instruction.csv

csv:
  enabled: false
  files: [ ]
## CSV configuration per file type
## File path is matched with wildcards
#    - filename: *accounts.csv
## Columns to replace with fill patterns
#      columns:
#        "shortName": "sn{id}" # fill by pattern
#        "longName": "ln{id}"
#        "email": ""           # clean
#        "address": "NA"       # fill with static value
